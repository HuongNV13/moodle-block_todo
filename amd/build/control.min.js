/**
 * Provides the block_todo/control module
 *
 * @package     block_todo
 * @category    output
 * @copyright   2018 David Mudr√°k <david@moodle.com>
 * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
 */
define("block_todo/control",["jquery","core/log","core/ajax","core/templates","core/str"],(function($,Log,Ajax,Templates,Str){function TodoControl(region,instanceid,contextid){this.region=region,this.instanceid=instanceid,this.contextid=contextid}return TodoControl.prototype.main=function(){this.addTextForm=this.region.find('[data-control="addform"]').first(),this.addTextInput=this.addTextForm.find("input.block_todo_text").first(),this.addDueDateInput=this.addTextForm.find("input.block_todo_duedate").first(),this.addTextButton=this.addTextForm.find("button").first(),this.itemsList=this.region.find("ul").first(),this.sortActions=this.region.find(".block_todo_sort .block_todo_sort_item"),this.initAddFeatures(),this.initEditFeatures(),this.initSortFeatures(),this.getItems("createddate")},TodoControl.prototype.initAddFeatures=function(){var self=this;self.addTextForm.on("submit",(function(e){e.preventDefault(),self.addNewTodo(),window.console.log("aa")})),self.addTextButton.on("click",(function(){self.addTextForm.submit()}))},TodoControl.prototype.initEditFeatures=function(){var self=this;self.itemsList.on("click","[data-item]",(function(e){e.preventDefault(),e.stopPropagation();var id=$(e.currentTarget).attr("data-item");self.toggleItem(id)})),self.itemsList.on("click",'[data-control="delete"]',(function(e){e.preventDefault(),e.stopPropagation();var id=$(e.currentTarget).closest("[data-item]").attr("data-item");self.deleteItem(id)}))},TodoControl.prototype.initSortFeatures=function(){const self=this;self.sortActions.on("click",(e=>{e.preventDefault();const sortBy=$(e.currentTarget).attr("data-sort");self.getItems(sortBy)}))},TodoControl.prototype.addNewTodo=function(){var self=this,text=$.trim(self.addTextInput.val());let args={duedate:null};const duedate=$.trim(self.addDueDateInput.val());return text?(duedate&&(args.duedate=Math.floor(new Date(duedate).getTime()/1e3)),self.addTextInput.prop("disabled",!0),args.todotext=text,Ajax.call([{methodname:"block_todo_add_item",args:args}])[0].fail((function(reason){return Log.error("block_todo/control: unable to add the item"),Log.debug(reason),self.addTextButton.addClass("btn-danger"),self.addTextButton.html('<i class="fa fa-exclamation-circle" aria-hidden="true"></i>'),$.Deferred().reject()})).then((function(response){return Templates.render("block_todo/item",response).fail((function(reason){Log.error("block_todo/control: unable to render the new item:"+reason)}))})).then((function(item){return self.itemsList.prepend(item),self.addTextInput.val(""),self.addTextInput.prop("disabled",!1),self.addTextInput.focus(),$.Deferred().resolve()}))):Str.get_string("placeholdermore","block_todo").then((function(text){return self.addTextInput.prop("placeholder",text),$.Deferred().resolve()}))},TodoControl.prototype.toggleItem=function(id){var self=this;return id?Ajax.call([{methodname:"block_todo_toggle_item",args:{id:id}}])[0].fail((function(reason){return Log.error("block_todo/control: unable to toggle the item"),Log.debug(reason),$.Deferred().reject()})).then((function(response){return Templates.render("block_todo/item",response).fail((function(reason){Log.error("block_todo/control: unable to render the new item:"+reason)}))})).then((function(item){return self.itemsList.find('[data-item="'+id+'"]').replaceWith(item),$.Deferred().resolve()})):$.Deferred().resolve()},TodoControl.prototype.deleteItem=function(id){var self=this;return id?Ajax.call([{methodname:"block_todo_delete_item",args:{id:id}}])[0].fail((function(reason){return Log.error("block_todo/control: unable to delete the item"),Log.debug(reason),$.Deferred().reject()})).then((function(deletedid){return self.itemsList.find('[data-item="'+deletedid+'"]').remove(),$.Deferred().resolve()})):$.Deferred().resolve()},TodoControl.prototype.getItems=function(sortBy){var self=this;return Ajax.call([{methodname:"block_todo_get_items",args:{instanceid:self.instanceid,contextid:self.contextid,sort:sortBy}}])[0].fail((function(reason){return Log.error("block_todo/control: unable to delete the item"),Log.debug(reason),$.Deferred().reject()})).then((function(response){return Templates.render("block_todo/items",response).fail((function(reason){Log.error("block_todo/control: unable to render items:"+reason)}))})).then((function(items){return self.region.find(".items-list").html(items),$.Deferred().resolve()}))},{init:function(instanceid,contextid){Log.debug("block_todo/control: initializing controls of the todo block instance "+instanceid);var region=$('[data-region="block_todo-instance-'+instanceid+'"]').first();region.length?new TodoControl(region,instanceid,contextid).main():Log.error("block_todo/control: wrapping region not found!")}}}));

//# sourceMappingURL=control.min.js.map